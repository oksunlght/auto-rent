{"version":3,"file":"static/js/388.f9a6207a.chunk.js","mappings":"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","sources":["components/carCard/CarCard.styled.jsx","components/carCard/CarCard.jsx","components/Modal/Modal.slyled.jsx","components/Modal/Modal.jsx","components/FilterByBrand/FilterByBrand.styled.jsx","components/FilterByBrand/FilterByBrand.jsx","components/FilterByPrice/FilterByPrice.styled.jsx","components/FilterByPrice/FilterByPrice.jsx","pages/catalog/Catalog.styled.jsx","pages/catalog/Catalog.jsx","redux/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CardContainer = styled.li`\n  position: relative;\n  width: 275px;\n`;\n\nexport const CarImage = styled.img`\n  width: 274px;\n  height: 268px;\n  margin-bottom: 14px;\n\n  border-radius: 14px;\n`;\n\nexport const MoreBtn = styled.button`\n  padding: 12px 99px;\n\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  border-radius: 12px;\n  background-color: #3470ff;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\n\nexport const MainDescription = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n\n  width: 275px;\n`;\n\nexport const ModelName = styled.p`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport const Model = styled.span`\n  color: #3470ff;\n`;\n\nexport const Price = styled.p`\n  margin-right: 8px;\n`;\n\nexport const CarSpects = styled.p`\n  margin-bottom: 28px;\n\n  color: rgba(18, 20, 23, 0.5);\n  font-size: 12px;\n  line-height: 1.5em;\n  max-height: 3em;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nexport const FavBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  color: #fff;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const FavIcon = styled.svg`\n  stroke: currentColor;\n  fill: transparent;\n`;\n\nexport const FavIconActive = styled.svg`\n  stroke: #3470ff;\n  fill: #3470ff;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport sprite from '../../images/sprite.svg';\nimport { selectAds, selectFavorite } from 'redux/selectors';\nimport { onCarSelect, addFavorite, removeFavorite } from 'redux/carsSlice';\nimport {\n  CardContainer,\n  CarImage,\n  MoreBtn,\n  MainDescription,\n  ModelName,\n  Model,\n  CarSpects,\n  FavBtn,\n  Price,\n} from './CarCard.styled';\n\nconst CarCard = ({ handleModalOpen }) => {\n  const dispatch = useDispatch();\n  const carAds = useSelector(selectAds);\n  const favoriteCars = useSelector(selectFavorite);\n\n  const selectStyle = id => {\n    const favCarsIds = favoriteCars.flatMap(car => car.id);\n\n    if (favCarsIds.includes(id)) {\n      const favIconStyleActive = {\n        stroke: '#3470ff',\n        fill: '#3470ff',\n      };\n      return favIconStyleActive;\n    }\n    const favIconStyle = {\n      stroke: 'currentColor',\n      fill: 'transparent',\n    };\n\n    return favIconStyle;\n  };\n\n  const handleSelectedCar = e => {\n    const carId = e.currentTarget.dataset.id;\n\n    const carData = carAds.filter(car => car.id === Number(carId));\n\n    dispatch(onCarSelect(carData));\n\n    handleModalOpen();\n  };\n\n  const handleAddFavorite = e => {\n    const carId = Number(e.currentTarget.dataset.id);\n    const selectedCard = e.target;\n    const carData = carAds.filter(car => car.id === carId);\n    const favIdList = favoriteCars.flatMap(car => car.id);\n\n    if (favIdList.includes(carId)) {\n      favoriteCars.filter(\n        car => car.id === carId && dispatch(removeFavorite(carId))\n      );\n      unselectFavorite(selectedCard);\n      return;\n    }\n\n    setActiveStyle(selectedCard);\n    dispatch(addFavorite(carData));\n  };\n\n  const setActiveStyle = card => {\n    card.style.stroke = '#3470ff';\n    card.style.fill = '#3470ff';\n  };\n\n  const unselectFavorite = card => {\n    card.style.stroke = 'currentColor';\n    card.style.fill = 'transparent';\n  };\n\n  return carAds.map(\n    ({\n      address,\n      id,\n      img,\n      model,\n      make,\n      year,\n      rentalPrice,\n      rentalCompany,\n      type,\n      mileage,\n      functionalities,\n    }) => {\n      const addressData = address.split(',');\n      const country = addressData[addressData.length - 1];\n      const city = addressData[addressData.length - 2];\n\n      return (\n        <CardContainer key={id}>\n          <FavBtn type=\"button\" data-id={id} onClick={handleAddFavorite}>\n            <svg style={selectStyle(id)} width=\"18\" height=\"18\">\n              <use href={sprite + '#fav-icon'}></use>\n            </svg>\n          </FavBtn>\n          <CarImage src={img} alt={model} />\n          <div>\n            <MainDescription>\n              <ModelName>\n                {make} <Model>{model}</Model>, {year}\n              </ModelName>\n              <Price>{rentalPrice}</Price>\n            </MainDescription>\n            <div>\n              <CarSpects>\n                {city} | {country} | {rentalCompany} | {type} | {model} |{' '}\n                {mileage.toLocaleString()} | {functionalities[0]}\n              </CarSpects>\n            </div>\n          </div>\n          <MoreBtn type=\"button\" data-id={id} onClick={handleSelectedCar}>\n            Learn more\n          </MoreBtn>\n        </CardContainer>\n      );\n    }\n  );\n};\n\nexport default CarCard;\n","import styled from '@emotion/styled';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(18, 20, 23, 0.5);\n`;\n\nconst Highlight = styled.span`\n  color: #3470ff;\n  font-weight: 600;\n`;\n\nconst ModalContainer = styled.div`\n  position: relative;\n  padding: 40px;\n  //   width: 541px;\n  width: 465px;\n  height: auto;\n\n  background-color: #fff;\n  border-radius: 24px;\n`;\n\nconst ModalImg = styled.img`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 14px;\n\n  width: 461px;\n  height: 248px;\n\n  border-radius: 14px;\n`;\n\nconst CloseBtn = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n\n  cursor: pointer;\n  background-color: transparent;\n`;\n\nconst CloseIcon = styled.svg`\n  stroke: #121417;\n`;\n\nconst InfoWrapper = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  width: 461px;\n`;\n\nconst Model = styled.p`\n  margin-bottom: 8px;\n\n  font-size: 18px;\n  color: #121417;\n  line-height: 1.33;\n  font-weight: 500;\n`;\n\nconst CarInfo = styled.p`\n  //   width: 290px;\n  width: 461px;\n  margin-bottom: 14px;\n  //   padding-right: 189px;\n\n  color: rgba(18, 20, 23, 0.5);\n  font-size: 12px;\n  line-height: 1.5;\n  text-align: left;\n`;\n\nconst CarInfoItem = styled.span`\n  position: relative;\n  margin-left: 6px;\n\n  overflow-wrap: normal;\n\n  &:not(:last-child) {\n    margin-right: 6px;\n  }\n\n  &:first-of-type {\n    margin-left: 0;\n  }\n\n  &:not(:last-child)::after {\n    content: '';\n    position: absolute;\n    right: -6px;\n    bottom: 0;\n    display: inline-block;\n    width: 1px;\n    height: 16px;\n    background-color: rgba(18, 20, 23, 0.1);\n    overflow-wrap: normal;\n  }\n`;\n\nconst Description = styled.p`\n  width: 461px;\n  margin-bottom: 24px;\n\n  color: #121417;\n  font-size: 14px;\n  text-align: left;\n  line-height: 1.43;\n`;\n\nconst Specs = styled.p`\n  margin-bottom: 8px;\n  color: #121417;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.43;\n`;\n\nconst SpecsList = styled.ul`\n  margin-bottom: 24px;\n`;\n\nconst SpecsItem = styled.li`\n  display: inline-block;\n  position: relative;\n  margin-left: 6px;\n\n  color: rgba(18, 20, 23, 0.5);\n  font-size: 12px;\n  line-height: 1.5;\n  text-align: left;\n  overflow-wrap: normal;\n\n  &:not(:last-child) {\n    margin-right: 6px;\n  }\n\n  &:first-of-type {\n    margin-left: 0;\n  }\n\n  &:not(:last-child)::after {\n    content: '';\n    position: absolute;\n    right: -6px;\n    bottom: 0;\n    display: inline-block;\n    width: 1px;\n    height: 16px;\n    background-color: rgba(18, 20, 23, 0.1);\n    overflow-wrap: normal;\n  }\n`;\n\nconst RentalConds = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  width: 461px;\n  margin-bottom: 24px;\n`;\n\nconst CondsItem = styled.p`\n  padding: 7px 14px;\n\n  color: #363535;\n  font-size: 12px;\n  line-height: 1.5;\n\n  border-radius: 35px;\n  background-color: #f9f9f9;\n`;\n\nconst RentLink = styled.a`\n  display: block;\n  padding: 12px 14px;\n  width: 168px;\n  height: auto;\n\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.43;\n  text-align: center;\n  text-decoration: none;\n  background-color: #3470ff;\n  border-radius: 12px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\n\nconst ModalStyles = {\n  Overlay,\n  ModalContainer,\n  ModalImg,\n  CloseBtn,\n  CloseIcon,\n  InfoWrapper,\n  Model,\n  Highlight,\n  CarInfo,\n  CarInfoItem,\n  Description,\n  Specs,\n  SpecsList,\n  SpecsItem,\n  RentalConds,\n  CondsItem,\n  RentLink,\n};\n\nexport default ModalStyles;\n","import { createPortal } from 'react-dom';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport sprite from '../../images/sprite.svg';\nimport { selectSelectedCar } from 'redux/selectors';\nimport ModalStyles from './Modal.slyled';\nimport { useEffect } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onModalClose }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onModalClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [onModalClose]);\n\n  const selectedCar = useSelector(selectSelectedCar);\n\n  const {\n    address,\n    id,\n    img,\n    model,\n    make,\n    year,\n    rentalPrice,\n    type,\n    mileage,\n    functionalities,\n    fuelConsumption,\n    engineSize,\n    description,\n    accessories,\n    rentalConditions,\n  } = selectedCar[0];\n\n  const transformedMileage = mileage.toLocaleString();\n\n  const addressData = address.split(',');\n  const country = addressData[addressData.length - 1];\n  const city = addressData[addressData.length - 2];\n\n  const splitRentalConditions = rentalConditions.split(',');\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onModalClose();\n    }\n  };\n\n  return createPortal(\n    <ModalStyles.Overlay onClick={handleBackdropClick}>\n      <ModalStyles.ModalContainer>\n        <ModalStyles.CloseBtn type=\"button\" onClick={onModalClose}>\n          <ModalStyles.CloseIcon width=\"24\" height=\"24\">\n            <use href={sprite + '#close-btn'}></use>\n          </ModalStyles.CloseIcon>\n        </ModalStyles.CloseBtn>\n        <ModalStyles.ModalImg src={img} alt={model} />\n        <ModalStyles.InfoWrapper>\n          <ModalStyles.Model>\n            {make} <ModalStyles.Highlight>{model}</ModalStyles.Highlight>,{' '}\n            {year}\n          </ModalStyles.Model>\n          <ModalStyles.CarInfo>\n            <ModalStyles.CarInfoItem>{city}</ModalStyles.CarInfoItem>\n            <ModalStyles.CarInfoItem>{country}</ModalStyles.CarInfoItem>\n            <ModalStyles.CarInfoItem>Id: {id}</ModalStyles.CarInfoItem>\n            <ModalStyles.CarInfoItem>Year: {year}</ModalStyles.CarInfoItem>\n            <ModalStyles.CarInfoItem>Type: {type}</ModalStyles.CarInfoItem>\n            <ModalStyles.CarInfoItem>\n              Fuel Consumption: {fuelConsumption}\n            </ModalStyles.CarInfoItem>\n            <ModalStyles.CarInfoItem>\n              Engine Size: {engineSize}\n            </ModalStyles.CarInfoItem>\n          </ModalStyles.CarInfo>\n          <ModalStyles.Description>{description}</ModalStyles.Description>\n          <ModalStyles.Specs>\n            Accessories and functionalities:\n          </ModalStyles.Specs>\n          <ModalStyles.SpecsList>\n            {accessories.map(item => (\n              <ModalStyles.SpecsItem key={nanoid(5)}>\n                {item}\n              </ModalStyles.SpecsItem>\n            ))}\n            {functionalities.map(item => (\n              <ModalStyles.SpecsItem key={nanoid(5)}>\n                {item}\n              </ModalStyles.SpecsItem>\n            ))}\n          </ModalStyles.SpecsList>\n          <ModalStyles.Specs>Rental Conditions:</ModalStyles.Specs>\n          <ModalStyles.RentalConds>\n            {splitRentalConditions.map(item => {\n              if (item.includes('age')) {\n                const splitItem = item.split(' ');\n                const itemText = splitItem\n                  .slice(0, splitItem.length - 1)\n                  .join(' ');\n\n                const age = splitItem[splitItem.length - 1];\n\n                return (\n                  <ModalStyles.CondsItem key={nanoid()}>\n                    {itemText}\n                    <ModalStyles.Highlight> {age}</ModalStyles.Highlight>\n                  </ModalStyles.CondsItem>\n                );\n              } else {\n                return (\n                  <ModalStyles.CondsItem key={nanoid()}>\n                    {item}\n                  </ModalStyles.CondsItem>\n                );\n              }\n            })}\n            <ModalStyles.CondsItem>\n              Mileage:\n              <ModalStyles.Highlight>\n                {' '}\n                {transformedMileage}\n              </ModalStyles.Highlight>\n            </ModalStyles.CondsItem>\n            <ModalStyles.CondsItem>\n              Price:\n              <ModalStyles.Highlight> {rentalPrice}</ModalStyles.Highlight>\n            </ModalStyles.CondsItem>\n          </ModalStyles.RentalConds>\n          <ModalStyles.RentLink href=\"tel:+380730000000\">\n            Rental car\n          </ModalStyles.RentLink>\n        </ModalStyles.InfoWrapper>\n      </ModalStyles.ModalContainer>\n    </ModalStyles.Overlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const DropContainer = styled.div`\n  position: relative;\n  margin-right: 18px;\n`;\n\nexport const LabelWrapper = styled.div`\n  position: relative;\n  display: block;\n  width: 331px;\n`;\n\nexport const BrandLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  color: #8a8a89;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n`;\n\nexport const Input = styled.input`\n  margin-top: 8px;\n  padding: 14px 89px 14px 18px;\n  width: 224px;\n  height: auto;\n\n  color: #121417;\n  font-weight: 500;\n  font-size: 18px;\n  border: none;\n  border-radius: 14px;\n  background-color: #f7f7fb;\n\n  &::placeholder {\n    color: #121417;\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 1.11;\n    opacity: 1;\n  }\n`;\n\nexport const DropBtn = styled.button`\n  position: absolute;\n  bottom: 14px;\n  right: 18px;\n\n  width: 20px;\n  height: 20px;\n\n  color: #121417;\n  background-color: transparent;\n\n  cursor: pointer;\n`;\n\nexport const DropIcon = styled.svg`\n  stroke: currentColor;\n  fill: transparent;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  bottom: 14px;\n  right: 45px;\n\n  width: 18px;\n  height: 18px;\n\n  color: #121417;\n  background-color: transparent;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled.svg`\n  stroke: currentColor;\n`;\n\nexport const BtnContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const BrandList = styled.ul`\n  position: absolute;\n  bottom: -1px;\n  left: 0;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 303px;\n  height: 272px;\n  padding: 14px 8px 14px 18px;\n\n  overflow-y: scroll;\n\n  transform: translateY(100%);\n\n  border-radius: 14px;\n  border: 1px solid rgba(18, 20, 23, 0.05);\n\n  background-color: #fff;\n  box-shadow: 0px 4px 36px 0px rgba(0, 0, 0, 0.02);\n\n  z-index: 100;\n`;\n\nexport const BrandListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const BrandBtn = styled.button`\n  color: rgba(18, 20, 23, 0.2);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport sprite from '../../images/sprite.svg';\nimport { selectCarBrands } from 'redux/selectors';\nimport carsOperations from 'redux/operations';\nimport { filterCars } from 'redux/carsSlice';\nimport {\n  DropContainer,\n  DropIcon,\n  DropBtn,\n  Input,\n  BrandLabel,\n  LabelWrapper,\n  BrandList,\n  BrandListItem,\n  BrandBtn,\n  CloseBtn,\n  CloseIcon,\n  BtnContainer,\n} from './FilterByBrand.styled';\n\nconst FilterByBrand = () => {\n  const [isListOpen, setIsListOpen] = useState(false);\n  const [isFilterEmpty, setIsFilterEmpty] = useState(true);\n  const [filter, setFilter] = useState('');\n  const cars = useSelector(selectCarBrands);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleSubmit = e => {\n      if (e.code === 'Enter') {\n        dispatch(carsOperations.fetchAds({ filter: e.target.value }));\n      }\n    };\n\n    window.addEventListener('keydown', handleSubmit);\n\n    return () => window.removeEventListener('keydown', handleSubmit);\n  }, [dispatch]);\n\n  const carBrands = cars.flatMap(car => car.make);\n  const uniqueBrands = carBrands.filter(\n    (brand, index, array) => array.indexOf(brand) === index\n  );\n\n  const handleClickDown = () => {\n    if (isListOpen) {\n      setIsListOpen(false);\n      return;\n    }\n    setIsListOpen(true);\n  };\n\n  const onBrandSelect = e => {\n    const selectedBrand = e.currentTarget.closest('li').dataset.item;\n    console.log(selectedBrand);\n\n    if (selectedBrand === '') {\n      return;\n    }\n\n    setFilter(selectedBrand);\n    setIsFilterEmpty(false);\n\n    setIsListOpen(false);\n\n    const filteredCars = cars.filter(car =>\n      car.make.toLowerCase().includes(selectedBrand.toLowerCase())\n    );\n\n    dispatch(filterCars(filteredCars));\n  };\n\n  const onInputChange = e => {\n    if (e.currentTarget.value === '') {\n      setFilter('');\n      setIsFilterEmpty(true);\n      return;\n    }\n    setFilter(e.currentTarget.value);\n    setIsFilterEmpty(false);\n  };\n\n  const onFocusChange = e => {\n    if (e.target.value === '') {\n      dispatch(carsOperations.fetchAds({ p: 1, l: 12 }));\n      setIsFilterEmpty(true);\n      return;\n    }\n    if (filter === '') {\n      return;\n    }\n    const filteredCars = cars.filter(car =>\n      car.make.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    dispatch(filterCars(filteredCars));\n  };\n\n  const handleFilter = e => {\n    setFilter('');\n    setIsFilterEmpty(true);\n    dispatch(carsOperations.fetchAds({ p: 1, l: 12 }));\n  };\n\n  return (\n    <DropContainer>\n      <LabelWrapper>\n        <BrandLabel>\n          Car brand\n          <Input\n            type=\"text\"\n            placeholder=\"Enter the text\"\n            value={filter}\n            id=\"input\"\n            onChange={onInputChange}\n            onBlur={onFocusChange}\n          />\n        </BrandLabel>\n        <BtnContainer>\n          <DropBtn type=\"button\" onClick={handleClickDown}>\n            {isListOpen ? (\n              <DropIcon width=\"20\" height=\"20\">\n                <use href={sprite + '#icon-up'}></use>\n              </DropIcon>\n            ) : (\n              <DropIcon width=\"20\" height=\"20\">\n                <use href={sprite + '#icon-down'}></use>\n              </DropIcon>\n            )}\n          </DropBtn>\n          {!isFilterEmpty && (\n            <CloseBtn type=\"button\" onClick={handleFilter}>\n              <CloseIcon width=\"17\" height=\"17\">\n                <use href={sprite + '#close_icon'}></use>\n              </CloseIcon>\n            </CloseBtn>\n          )}\n        </BtnContainer>\n      </LabelWrapper>\n      {isListOpen && (\n        <BrandList>\n          {uniqueBrands.map(item => (\n            <BrandListItem key={nanoid()} data-item={item}>\n              <BrandBtn type=\"button\" onClick={onBrandSelect}>\n                {item}\n              </BrandBtn>\n            </BrandListItem>\n          ))}\n        </BrandList>\n      )}\n    </DropContainer>\n  );\n};\n\nexport default FilterByBrand;\n","import styled from '@emotion/styled';\n\nexport const DropContainer = styled.div`\n  position: relative;\n`;\n\nexport const LabelWrapper = styled.div`\n  position: relative;\n  display: block;\n  width: 153px;\n`;\n\nexport const BrandLabel = styled.p`\n  display: flex;\n  flex-direction: column;\n\n  color: #8a8a89;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n`;\n\nexport const Input = styled.button`\n  margin-top: 8px;\n  padding: 14px 18px;\n  width: 145px;\n  height: 48px;\n\n  color: #121417;\n  font-weight: 500;\n  font-size: 18px;\n  text-align: left;\n  border: none;\n  border-radius: 14px;\n  background-color: #f7f7fb;\n\n  &::placeholder {\n    color: #121417;\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 1.11;\n    opacity: 1;\n  }\n`;\n\nexport const DropBtn = styled.button`\n  position: absolute;\n  bottom: 14px;\n  right: 25px;\n\n  width: 20px;\n  height: 20px;\n\n  color: #121417;\n  background-color: transparent;\n\n  cursor: pointer;\n`;\n\nexport const DropIcon = styled.svg`\n  stroke: currentColor;\n  fill: transparent;\n`;\n\nexport const BrandList = styled.ul`\n  position: absolute;\n  bottom: -1px;\n  left: 0;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 97px;\n  height: 272px;\n  padding: 14px 8px 14px 18px;\n\n  overflow-y: scroll;\n\n  transform: translateY(100%);\n\n  border-radius: 14px;\n  border: 1px solid rgba(18, 20, 23, 0.05);\n\n  background-color: #fff;\n  box-shadow: 0px 4px 36px 0px rgba(0, 0, 0, 0.02);\n\n  z-index: 100;\n`;\n\nexport const BrandListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const BrandBtn = styled.button`\n  color: rgba(18, 20, 23, 0.2);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  bottom: 20px;\n  right: 48px;\n\n  width: 14px;\n  height: 14px;\n\n  color: #121417;\n  background-color: transparent;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled.svg`\n  stroke: currentColor;\n`;\n\nexport const BtnContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { selectCarBrands } from 'redux/selectors';\nimport { filterCars } from 'redux/carsSlice';\nimport sprite from '../../images/sprite.svg';\nimport carsOperations from 'redux/operations';\nimport {\n  DropContainer,\n  DropIcon,\n  DropBtn,\n  Input,\n  BrandLabel,\n  LabelWrapper,\n  BrandList,\n  BrandListItem,\n  BrandBtn,\n  CloseBtn,\n  CloseIcon,\n  BtnContainer,\n} from './FilterByPrice.styled';\n\nconst FilterByPrice = () => {\n  const [isListOpen, setIsListOpen] = useState(false);\n  const [priceFilter, setPriceFilter] = useState('');\n  const [isFilterEmpty, setIsFilterEmpty] = useState(true);\n  const cars = useSelector(selectCarBrands);\n  const dispatch = useDispatch();\n\n  let priceLimit = [];\n\n  const number = 450;\n  for (let i = 10; i <= number; i += 10) {\n    console.log(i);\n    if (priceLimit.includes(i)) {\n      break;\n    }\n    priceLimit.push(i);\n  }\n\n  const handleClickDown = () => {\n    if (isListOpen) {\n      setIsListOpen(false);\n      return;\n    }\n    setIsListOpen(true);\n  };\n\n  const onPriceSelect = e => {\n    e.preventDefault();\n    const selectedPrice = e.currentTarget.closest('li').dataset.item;\n\n    setPriceFilter(selectedPrice);\n\n    if (selectedPrice === '') {\n      return;\n    }\n\n    const filteredCars = cars.filter(\n      ({ rentalPrice }) =>\n        Number(rentalPrice.match(/(\\d+)/)[0]) <= Number(selectedPrice)\n    );\n\n    dispatch(filterCars(filteredCars));\n    setIsListOpen(false);\n    setIsFilterEmpty(false);\n  };\n\n  const handleBtnText = () =>\n    priceFilter === '' ? 'To $' : `To ${priceFilter} $`;\n\n  const handleFilter = e => {\n    setPriceFilter('');\n    setIsFilterEmpty(true);\n\n    dispatch(carsOperations.fetchAds({ p: 1, l: 12 }));\n  };\n\n  return (\n    <DropContainer>\n      <LabelWrapper>\n        <BrandLabel>\n          Price/ 1 hour\n          <Input type=\"button\">{handleBtnText()}</Input>\n        </BrandLabel>\n        <BtnContainer>\n          <DropBtn type=\"button\" onClick={handleClickDown}>\n            {isListOpen ? (\n              <DropIcon width=\"20\" height=\"20\">\n                <use href={sprite + '#icon-up'}></use>\n              </DropIcon>\n            ) : (\n              <DropIcon width=\"20\" height=\"20\">\n                <use href={sprite + '#icon-down'}></use>\n              </DropIcon>\n            )}\n          </DropBtn>\n          {!isFilterEmpty && (\n            <CloseBtn type=\"button\" onClick={handleFilter}>\n              <CloseIcon width=\"17\" height=\"17\">\n                <use href={sprite + '#close_icon'}></use>\n              </CloseIcon>\n            </CloseBtn>\n          )}\n        </BtnContainer>\n      </LabelWrapper>\n      {isListOpen && (\n        <BrandList>\n          {priceLimit.map(item => (\n            <BrandListItem key={nanoid()} data-item={item}>\n              <BrandBtn type=\"button\" onClick={onPriceSelect}>\n                {item}\n              </BrandBtn>\n            </BrandListItem>\n          ))}\n        </BrandList>\n      )}\n    </DropContainer>\n  );\n};\n\nexport default FilterByPrice;\n","import styled from '@emotion/styled';\n\nexport const AdsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 100px;\n  gap: 50px 29px;\n`;\n\nexport const MoreBtn = styled.button`\n  margin-right: auto;\n  margin-left: auto;\n\n  color: #3470ff;\n  background-color: transparent;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  text-decoration: underline;\n  line-height: 1.5;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #0b44cd;\n  }\n`;\n\nexport const FiltersContainer = styled.div`\n  display: flex;\n  margin-bottom: 50px;\n  justify-content: center;\n`;\n\nexport const EmptyList = styled.p`\n  font-size: 24px;\n  font-weight: 400;\n  color: rgba(18, 20, 23, 0.5);\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid } from 'react-loader-spinner';\nimport carsOperations from 'redux/operations';\nimport { selectIsLoading, selectAds } from 'redux/selectors';\nimport CarCard from 'components/carCard/CarCard';\nimport Modal from 'components/Modal/Modal';\nimport FilterByBrand from 'components/FilterByBrand/FilterByBrand';\nimport FilterByPrice from 'components/FilterByPrice/FilterByPrice';\nimport {\n  AdsList,\n  MoreBtn,\n  FiltersContainer,\n  EmptyList,\n} from './Catalog.styled';\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n  const carAds = useSelector(selectAds);\n\n  useEffect(() => {\n    dispatch(carsOperations.fetchBrandsList());\n  }, [dispatch]);\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const onModalClose = () => {\n    setIsModalOpen(false);\n  };\n\n  const onLoadMoreBtnClick = e => {\n    dispatch(carsOperations.fetchAds({ p: 2 }));\n    setIsDisabled(true);\n  };\n\n  const disabledColor = () => {\n    if (isDisabled) {\n      const disabledStyle = {\n        color: 'rgba(18, 20, 23, 0.50)',\n        cursor: 'initial',\n        // display: 'none',\n      };\n      return disabledStyle;\n    }\n  };\n\n  return isLoading ? (\n    <Grid\n      height=\"100\"\n      width=\"100\"\n      color=\"#3470FF\"\n      ariaLabel=\"rings-loading\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100vh',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      firstLineColor=\"\"\n      middleLineColor=\"\"\n      lastLineColor=\"\"\n    />\n  ) : (\n    <>\n      <div>\n        <FiltersContainer>\n          <FilterByBrand />\n          <FilterByPrice />\n        </FiltersContainer>\n        {carAds.length === 0 ? (\n          <EmptyList>There are no such cars</EmptyList>\n        ) : (\n          <>\n            <AdsList>\n              <CarCard handleModalOpen={handleModalOpen} />\n            </AdsList>\n            <MoreBtn\n              style={disabledColor()}\n              type=\"button\"\n              onClick={onLoadMoreBtnClick}\n              disabled={isDisabled}\n            >\n              Load more\n            </MoreBtn>\n          </>\n        )}\n      </div>\n      {isModalOpen && <Modal onModalClose={onModalClose} />}\n    </>\n  );\n};\n\nexport default Catalog;\n","export const selectAds = state => state.ads;\nexport const selectSelectedCar = state => state.selectedCar;\nexport const selectFavorite = state => state.favorite;\nexport const selectIsLoading = state => state.isLoading;\nexport const selectCarBrands = state => state.carBrands;\nexport const selectPriceFilter = state => state.priceFilter;\n"],"names":["CardContainer","styled","_templateObject","_taggedTemplateLiteral","CarImage","_templateObject2","MoreBtn","_templateObject3","MainDescription","_templateObject4","ModelName","_templateObject5","Model","_templateObject6","Price","_templateObject7","CarSpects","_templateObject8","FavBtn","_templateObject9","_templateObject10","_templateObject11","_ref","handleModalOpen","dispatch","useDispatch","carAds","useSelector","selectAds","favoriteCars","selectFavorite","selectStyle","id","flatMap","car","includes","stroke","fill","handleSelectedCar","e","carId","currentTarget","dataset","carData","filter","Number","onCarSelect","handleAddFavorite","selectedCard","target","removeFavorite","unselectFavorite","setActiveStyle","addFavorite","card","style","map","_ref2","address","img","model","make","year","rentalPrice","rentalCompany","type","mileage","functionalities","addressData","split","country","length","city","_jsxs","children","_jsx","onClick","width","height","href","sprite","src","alt","toLocaleString","Overlay","Highlight","ModalContainer","ModalImg","CloseBtn","CloseIcon","InfoWrapper","CarInfo","CarInfoItem","Description","Specs","_templateObject12","SpecsList","_templateObject13","SpecsItem","_templateObject14","RentalConds","_templateObject15","CondsItem","_templateObject16","RentLink","_templateObject17","modalRoot","document","querySelector","onModalClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","_selectedCar$","selectSelectedCar","fuelConsumption","engineSize","description","accessories","rentalConditions","transformedMileage","splitRentalConditions","createPortal","ModalStyles","item","nanoid","splitItem","itemText","slice","join","age","DropContainer","LabelWrapper","BrandLabel","Input","DropBtn","DropIcon","BtnContainer","BrandList","BrandListItem","BrandBtn","_useState","useState","_useState2","_slicedToArray","isListOpen","setIsListOpen","_useState3","_useState4","isFilterEmpty","setIsFilterEmpty","_useState5","_useState6","setFilter","cars","selectCarBrands","handleSubmit","carsOperations","value","uniqueBrands","brand","index","array","indexOf","onBrandSelect","selectedBrand","closest","console","log","filteredCars","toLowerCase","filterCars","placeholder","onChange","onBlur","p","l","priceFilter","setPriceFilter","priceLimit","i","push","onPriceSelect","preventDefault","selectedPrice","match","concat","AdsList","FiltersContainer","EmptyList","isModalOpen","setIsModalOpen","isDisabled","setIsDisabled","isLoading","selectIsLoading","Grid","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor","_Fragment","FilterByBrand","FilterByPrice","CarCard","cursor","disabledColor","disabled","Modal","state","ads","selectedCar","favorite","carBrands"],"sourceRoot":""}